#To define a guard main block by snmp directive.For a nginx instance,should be define guard main block ONCE.  
snmp {

   #The interval of getting SNMP data.This directive cat ben placed in snmp block or placed in group directive.
   #The value of this directive in a group block is as same as one's in the snmp block when there is not the 
   #directive in the group block.
   interval  60;
   
   #A server will be become to down,if there are more than three times error when guard getting SNMP data from the server
   #Note: A server can accept HTTP request when it's status is down.This directive is for guard,and it is not affect on UPSTREAM
   # or other HTTP module.Guard will not gett SNMP data from a down server until the server become to OK.  
   fall  3;

   #SNMP port of running on servers
   port      162;

   #SNMP version of running on servers
   version   3;

   #To define a SNMP parameters group by group.group_name is group name.This name will be used by snmp_group directive, and in a 
   #main block,the name must be unduplicated.It is possible that there are several group block in a snmp block. 
   group group_name {

   	interval  30;	
   	fall  3;                                     
   	version   2c;
   	port      161;
	
	#Community name.
	community public;

        #To define a item block by item directive.
   	item {

	        #To define a object block by object directive.load is object name.This name will be used by express directive, and in a
		#item block,the name must be unduplicated.It is possible that there are several object block in a item block.
		object load {
		
			#Specifing OID of a SNMP object.Note: this value must be numberic 
	    		oid               "1.3.6.1.4.1.2021.10.1.3.1";
			
			#The value type of a SNMP object(INT or FLOAT).  
			type               "FLOAT";                            
   		}

                #Maximum or minimum value of a item. Guard will consider a item is unhealthy when it's value is MORE(or LESSï¼‰than
		# most value. 
    		most               0.5;
  
		#If the value of this directive is MORE,Guard will consider a item is unhealthy when it's value is MORE than most value.Or,		        
		#If the value of this directive is LESS,Guard will consider a item is unhealthy when it's value is LESS than most value.
		direction          "MORE";
                
		#The weight of the item.The value of this directive must be a integer.Example,if a item weight is 0.8,then this directive value must be 80.
		#If guard_mode is and,and there are several items in a group block, guard consider the value of a item
		# which is unhealthy is 1, then consider 1*weight is the item value.Example: weight1,weight2,weight3...,weightNis the weight of the item1,
		# item2,item3...,itemN,and they are unhealthy. Then result=1*weight1 + 1*weight2 + 1*weight3+...+1*weightN.If result is more than 1,then 
		# guard will consider the server is unhealthy.Otherwise, the server is healthy.   
		weight	           80; 				 
    	}

	
	item {
               object swap.total.size {
                      oid                  "1.3.6.1.4.1.2021.4.3.0";
                      type         "INT";
               }
               object swap.free.size {
                       oid              "1.3.6.1.4.1.2021.4.4.0";
                       type             "INT";
               }
	       
	       #express directive. swap.ratio is the express' name.last is a function.It's functios is get the last value of a object.
	       #The others function are:
	       #change:get the change of the value of a object.In the other word,the return of the function is (valueN) - (valueN-1). 
	       #rate:get the change rate of the value of a object.In the other word, the return of the function is ((valueN)-(valueN-1))/interval
	       #swap.total.size is obect name.
               express "swap.ratio = (last(swap.total.size) - last(swap.free.size))/last(swap.total.size)*100";
               most               off;
               direction          "LESS";
               weight             10;
       }
       item {
               object mem.free.size {
                       oid                 "1.3.6.1.4.1.2021.4.6.0";
                       type               "INT";
               }
               object mem.buffered.size {
                       oid              "1.3.6.1.4.1.2021.4.14.0";
                       type               "INT";
               }
               object mem.cached.size {
                       oid              "1.3.6.1.4.1.2021.4.15.0";
                       type               "INT";
               }
               ####
               #express caculate ref from: https://github.com/codeplea/tinyexpr
               ####
               #Ref: http://tengine.taobao.org/document/http_sysguard.html
               express "mem.free = mem.free.size + mem.buffered.size + mem.cached.size";
               #M: 1024*1024 m: 1000*1000
               most               on;
               direction          "MORE";
               weight              10;
       }

      item {
               object if.InOctet{
                       oid              "1.3.6.1.2.1.2.2.1.10.1";
                       type               "INT";
               }
               object if.OutOctet{
                       oid           "1.3.6.1.2.1.2.2.1.16.1";
                       type               "INT";
               }
               #interval is collection interval
               express "if.speed = ((change(if.InOctet) + change(if.OutOctet))/interval";
               most               95M;
               direction          "LESS";
               weight              5;
       }

    }
}
